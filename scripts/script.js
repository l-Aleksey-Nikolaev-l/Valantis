const URL = "https://api.valantis.store:41000/";let finalData;async function checkSession() {    if(!sessionStorage.getItem("X-Auth")) {        console.log("Welcome! Please, enter API password!");        return;    }    let check = await fetch(URL, generateLoginOptions(sessionStorage.getItem("X-Auth")));    if (check.status === 200) {        showComponents(true);        console.log("You logged!");    } else {        showComponents(false)        sessionStorage.removeItem("X-Auth");        console.log("Wrong API password!");    }}function showComponents(state) {    if(!state) {        document.getElementById("dataPanel").style.display = "none";        document.getElementById("logOutButton").style.display = "none";        document.body.innerHTML += `        <section id="loginComponent">            <section id="loginPanel">                <label id="passwordLabel" for="apiPass">API Password</label>                <input id="apiPass" type="text">                <button id="logInButton" type="submit" onclick="logIn()">LogIn</button>            </section>        </section> `;    }    else {        document.getElementById("loginComponent").remove()        document.getElementById("logOutButton").style.display = "initial";        document.getElementById("dataPanel").style.display = "initial";    }}async function logIn() {    let apiPassword = document.getElementById("apiPass").value;    let md5hash = generateMD5HASH(apiPassword);    let loginOptions = generateLoginOptions(md5hash);    let response = await fetch(URL, loginOptions);    if (response.status === 200) {        showComponents(true);        sessionStorage.setItem("X-Auth", md5hash);        console.log(`API password is correct!`)    } else {        alert(`Access denied! Wrong credential!\n\nError code: ${response.status}`);    }}function generateLoginOptions(MD5) {    let header = { "Content-Type": "application/json", "X-Auth": MD5 };    let request = JSON.stringify({        "action": "get_ids",        "params": {"limit": 0}    });    return { method: "POST", headers: header, body: request };}function generateTimeStamp() {    const currentDate = new Date();    let dateUTC = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());    const dateFormat = new Intl.DateTimeFormat("en-CA");    return dateFormat.format(dateUTC).split("-").join("");}function generateMD5HASH(apiPass) {    let md5hash = CryptoJS.MD5(`${apiPass}_${generateTimeStamp()}`);    return md5hash.toString();}function logOut() {    if(sessionStorage.getItem("X-Auth")) {        sessionStorage.removeItem("X-Auth");        showComponents(false)        console.log("Bye bye! You are logged out!");    }}async function getIDs() {    let newIDs = await fetch(URL, generateDataOptions())        .then(response => {            return response.json();        });    let crunchedIDs = newIDs.result;//[...new Set(newIDs.result)];    await getData(crunchedIDs);}async function getData(ids, product, price, brand, offset, limit) {    let newData = await fetch(URL, generateDataOptions(ids, product, price, brand, offset, limit))        .then(response => {            return response.json();        });    const tempIDs = newData.result.map(({ id }) => id);    finalData = newData.result.filter(({ id }, index) => !tempIDs.includes(id, index + 1));    addData();}function generateDataOptions(ids, product, price, brand, offset, limit) {    let MD5 = sessionStorage.getItem("X-Auth");    let header = { "Content-Type": "application/json", "X-Auth": MD5 };    let request;    if(!ids || !product || !price || !brand) {        request = JSON.stringify({            "action": "get_ids",            "params": {"offset": 0, "limit": 100}        });    }    if(ids) {        request = JSON.stringify({            "action": "get_items",            "params": {"ids": ids}        });    }    return { method: "POST", headers: header, body: request };}function addData() {    let table = document.querySelector("#dataSection");    let count = document.querySelector("#countItems");    let value = count.value;    table.innerHTML = "";    for(let item = 0; item < value; item++) {        table.innerHTML += `            <tr>                <td>${item + 1}</td>                <td>${finalData[item]["id"]}</td>                <td>${finalData[item]["product"]}</td>                <td>${finalData[item]["price"]}</td>                <td>${finalData[item]["brand"]}</td>            </tr>`    }}